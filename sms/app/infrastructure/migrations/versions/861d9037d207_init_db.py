"""init_db

Revision ID: 861d9037d207
Revises: 
Create Date: 2025-04-28 00:45:52.209235

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '861d9037d207'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('table_sms_record',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('SENT', 'DELIVERED', 'FAILED', 'EXPIRED', name='sms_status_enum'), nullable=True),
    sa.Column('sms_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sms_id'),
    schema='sms'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('table_sms_record', schema='sms')
    # ### end Alembic commands ###
    # Drop the ENUM safely
    op.execute("""
    DO $$
    BEGIN
            IF EXISTS (SELECT 1 FROM pg_type WHERE typname = 'sms_status_enum') THEN
            DROP TYPE sms_status_enum;
        END IF;
    END
    $$;
    """)